{
	"React Native hooks with no redux": {
		"scope": "javascript",
		"prefix": "rnhnr",
		"body": [
			"import React, { useState, useEffect } from 'react';",
			"import { View, Text, StyleSheet} from 'react-native';",
			"",
			"export default function $TM_FILENAME_BASE(props) {",
			"const [num, setNum] = useState(0);",
			"",
			"useEffect(() => {",
			"//one time actions",
			"}, []);",
			"useEffect(() => {",
			"",
			"return () => {",
			"//clean up",
			"};",
			"});",
			"",
			"return (",
			"<View style={styles.container}>",
			"<Text>$TM_FILENAME_BASE</Text>",
			"</View>",
			")",
			"}",
			"const styles = StyleSheet.create({",
			"container: {",

			"}",
			"})"
		]
	},
	"React Native hooks with redux": {
		"scope": "javascript",
		"prefix": "rnhwr",
		"body": [
			"import React, { useState, useEffect } from 'react';",
			"import { useSelector, useDispatch } from 'react-redux';",
			"import { View, Text, StyleSheet} from 'react-native';",
			"",
			"export default function $TM_FILENAME_BASE(props) {",
			"const dispatch = useDispatch()",
			"const query = useSelector(state => state.query)",
			"const { title } = useSelector(state => ({",
			"title: state.title",
			"}));",
			"const [num, setNum] = useState(0);",
			"",
			"useEffect(() => {",
			"//one time actions",
			"}, []);",
			"useEffect(() => {",
			"",
			"return () => {",
			"//clean up",
			"};",
			"});",
			"",
			"return (",
			"<View style={styles.container}>",
			"<Text>$TM_FILENAME_BASE</Text>",
			"</View>",
			")",
			"}",
			"const styles = StyleSheet.create({",
			"container: {",

			"}",
			"})"
		]
	},
	"React hooks with redux": {
		"scope": "javascript",
		"prefix": "rhwr",
		"body": [
			"import React, { useState, useEffect } from 'react';",
			"import { useSelector, useDispatch } from 'react-redux';",
			"",
			"export default function $TM_FILENAME_BASE(props) {",
			"const dispatch = useDispatch()",
			"const query = useSelector(state => state.query)",
			"const { title } = useSelector(state => ({",
			"title: state.title",
			"}));",
			"const [num, setNum] = useState(0);",
			"",
			"useEffect(() => {",
			"//one time actions",
			"}, []);",
			"",
			"useEffect(() => {",
			"return () => {",
			"//clean up",
			"};",
			"});",
			"",
			"return (",
			"<div> $TM_FILENAME_BASE </div>",
			");",
			"}"
		]
	},
	"React hooks without redux": {
		"scope": "javascript",
		"prefix": "rhnr",
		"body": [
			"import React, { useState, useEffect } from 'react';",
			"",
			"export default function $TM_FILENAME_BASE(props) {",
			"const [num, setNum] = useState(0);",
			"",
			"useEffect(() => {",
			"//one time actions",
			"}, []);",
			"",
			"useEffect(() => {",
			"return () => {",
			"//clean up",
			"};",
			"});",
			"",
			"return (",
			"<div> $TM_FILENAME_BASE </div>",
			");",
			"}"
		]
	},
	"React class without material styles": {
		"scope": "javascript",
		"prefix": "rwns",
		"body": [
			"import React, {Component} from 'react'; ",
			"",
			"class $TM_FILENAME_BASE extends Component {",
			"state={}",
			"render() {",
			"return (<div><p>Hello</p></div>);",
			"}",
			"}",
			"export default $TM_FILENAME_BASE;"
		]
	},
	"React class with material styles": {
		"scope": "javascript",
		"prefix": "rws",
		"body": [
			"import React, {Component} from 'react'; ",
			"import { withStyles } from '@material-ui/core/styles'; ",
			"",
			"const styles = theme => ({})",
			"",
			"class $TM_FILENAME_BASE extends Component {",
			"state={}",
			"render() {",
			"const {classes, theme} = this.props;",
			"return (<div><p>Hello</p></div>);",
			"}",
			"}",
			"export default withStyles(styles, { withTheme: true })($TM_FILENAME_BASE);"
		]
	},
	"React class with material styles with redux": {
		"scope": "javascript",
		"prefix": "rwsr",
		"body": [
			"import React, {Component} from 'react'; ",
			"import { connect } from 'react-redux';",
			"import { bindActionCreators } from 'redux';",
			"import { withStyles } from '@material-ui/core/styles'; ",
			"",
			"const styles = theme => ({})",
			"",
			"class $TM_FILENAME_BASE extends Component {",
			"state={}",
			"render() {",
			"const {classes, theme} = this.props;",

			"return (<div><p>Hello</p></div>);",
			"}",
			"}",
			"function mapDispatchToProps(dispatch) {",
			"  return bindActionCreators({}, dispatch)",
			"}",
			"function mapStateToProps(state) {",
			"  return {",
			"}",
			"}",
			"export default withStyles(styles, { withTheme: true })(connect(mapStateToProps, mapDispatchToProps)($TM_FILENAME_BASE));"
		]
	},
	"React class without material styles with redux": {
		"scope": "javascript",
		"prefix": "rwnsr",
		"body": [
			"import React, {Component} from 'react'; ",
			"import { connect } from 'react-redux';",
			"import { bindActionCreators } from 'redux';",
			"",
			"class $TM_FILENAME_BASE extends Component {",
			"state={}",
			"render() {",

			"return (<div><p>Hello</p></div>);",
			"}",
			"}",
			"function mapDispatchToProps(dispatch) {",
			"  return bindActionCreators({}, dispatch)",
			"}",
			"function mapStateToProps(state) {",
			"  return {",
			"}",
			"}",
			"export default connect(mapStateToProps, mapDispatchToProps)($TM_FILENAME_BASE);"
		]
	}
}
